Vagrant.configure("2") do |config|

  config.vm.define "logger" do |cfg|
    cfg.vm.box = "bento/ubuntu-18.04"
    cfg.vm.hostname = "logger"
    cfg.vm.provision :shell, path: "bootstrap.sh"
    cfg.vm.provision :shell, path: "ELK.sh"
    cfg.vm.network :private_network, ip: "192.168.38.105", gateway: "192.168.38.1", dns: "8.8.8.8"

    cfg.vm.provider "vmware_desktop" do |v, override|
      v.vmx["displayname"] = "logger"
      v.memory = 4096
      v.cpus = 2
      v.gui = false
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "logger"
      vb.customize ["modifyvm", :id, "--memory", 4096]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end


   config.vm.define "dc" do |cfg|
      cfg.vm.box = "cyberdefenders/AD"
      cfg.vm.hostname = "dc"
      cfg.vm.boot_timeout = 600
      cfg.winrm.transport = :plaintext
      cfg.vm.communicator = "winrm"
      cfg.winrm.basic_auth_only = true
      cfg.winrm.timeout = 300
      cfg.winrm.retry_limit = 20
      cfg.vm.network :private_network, ip: "192.168.38.102", gateway: "192.168.38.1"

      cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", privileged: true, args: "-ip 192.168.38.102 -dns 8.8.8.8 -gateway 192.168.38.1" 
      cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
      cfg.vm.provision "reload"
      cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/install-choco-extras.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: false
      
      cfg.vm.provision "shell", path: "scripts/configure-ou.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/configure-wef-gpo.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/configure-powershelllogging.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/configure-AuditingPolicyGPOs.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/configure-rdp-user-gpo.ps1", privileged: false
      cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: false
      cfg.vm.provision "shell", inline: 'wevtutil el | Select-String -notmatch "Microsoft-Windows-LiveId" | Foreach-Object {wevtutil cl "$_"}', privileged: false
      cfg.vm.provision "shell", inline: "Set-SmbServerConfiguration -AuditSmb1Access $true -Force", privileged: false
      cfg.vm.provision "enable-public-winrm", type: "shell", path: "scripts/enable-winrm.ps1", privileged: false
      cfg.vm.provision "shell", inline: 'cscript c:\windows\system32\slmgr.vbs /dlv', privileged: false
    

     cfg.vm.provider "vmware_desktop" do |v, override|
        v.vmx["displayname"] = "dc.windomain.local"
        v.memory = 3072
        v.cpus = 2
        v.gui = false
        v.enable_vmrun_ip_lookup = false
     end

     cfg.vm.provider "virtualbox" do |vb, override|
        vb.gui = false
        vb.name = "dc.windomain.local"
        vb.default_nic_type = "82545EM"
        vb.customize ["modifyvm", :id, "--memory", 3072]
        vb.customize ["modifyvm", :id, "--cpus", 2]
        vb.customize ["modifyvm", :id, "--vram", "32"]
        vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
     end
   end

   config.vm.define "wef" do |cfg|
      cfg.vm.box = "cyberdefenders/win2016"
      cfg.vm.hostname = "wef"
      cfg.vm.boot_timeout = 600
      cfg.vm.communicator = "winrm"
      cfg.winrm.basic_auth_only = true
      cfg.winrm.timeout = 300
      cfg.winrm.retry_limit = 20
      cfg.vm.network :private_network, ip: "192.168.38.103", gateway: "192.168.38.1", dns: "192.168.38.102"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", privileged: true, args: "-ip 192.168.38.103 -dns 8.8.8.8 -gateway 192.168.38.1" 
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: false
    cfg.vm.provision "shell", inline: 'wevtutil el | Select-String -notmatch "Microsoft-Windows-LiveId" | Foreach-Object {wevtutil cl "$_"}', privileged: false
    cfg.vm.provision "shell", path: "scripts/install-wefsubscriptions.ps1", privileged: false

    # cfg.vm.provision "shell", path: "scripts/install-windows_ta.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-redteam.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-choco-extras.ps1", privileged: false
    cfg.vm.provision "install-winlogbeat", type: "shell", path: "scripts/install-winlogbeat.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/configure-pslogstranscriptsshare.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: false
    cfg.vm.provision "shell", inline: "Set-SmbServerConfiguration -AuditSmb1Access $true -Force", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-microsoft-ata.ps1", privileged: false
    cfg.vm.provision "enable-public-winrm", type: "shell", path: "scripts/enable-winrm.ps1", privileged: false
    cfg.vm.provision "shell", inline: 'cscript c:\windows\system32\slmgr.vbs /dlv', privileged: false

     cfg.vm.provider "vmware_desktop" do |v, override|
        v.vmx["displayname"] = "wef.windomain.local"
        v.memory = 2048
        v.cpus = 2
        v.gui = false
        v.enable_vmrun_ip_lookup = false
     end

     cfg.vm.provider "virtualbox" do |vb, override|
        vb.gui = false
        vb.name = "wef.windomain.local"
        vb.default_nic_type = "82545EM"
        vb.customize ["modifyvm", :id, "--memory", 2048]
        vb.customize ["modifyvm", :id, "--cpus", 2]
        vb.customize ["modifyvm", :id, "--vram", "32"]
        vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
     end
   end

   config.vm.define "win10" do |cfg|
      cfg.vm.box = "cyberdefenders/win10"
      cfg.vm.hostname = "win10"
      cfg.vm.boot_timeout = 1200
      cfg.vm.communicator = "winrm"
      cfg.winrm.basic_auth_only = true
      cfg.winrm.timeout = 1200
      cfg.winrm.retry_limit = 20
      cfg.vm.network :private_network, ip: "192.168.38.104", gateway: "192.168.38.1", dns: "192.168.38.102"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", privileged: true, args: "-ip 192.168.38.104 -dns 8.8.8.8 -gateway 192.168.38.1" 
    cfg.vm.provision "shell", path: "scripts/MakeWindows10GreatAgain.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: false
    cfg.vm.provision "shell", inline: 'wevtutil el | Select-String -notmatch "Microsoft-Windows-LiveId" | Foreach-Object {wevtutil cl "$_"}', privileged: false
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-redteam.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-choco-extras.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: false
    cfg.vm.provision "enable-public-winrm", type: "shell", path: "scripts/enable-winrm.ps1", privileged: false
    cfg.vm.provision "shell", inline: 'cscript c:\windows\system32\slmgr.vbs /dlv', privileged: false
    cfg.vm.provision "shell", inline: 'cscript c:\windows\system32\slmgr.vbs /rearm', privileged: false
    cfg.vm.provision "reload"

     cfg.vm.provider "vmware_desktop" do |v, override|
        v.vmx["displayname"] = "win10.windomain.local"
        v.vmx["gui.fullscreenatpoweron"] = "FALSE"
        v.vmx["gui.viewModeAtPowerOn"] = "windowed"
        v.memory = 2048
        v.cpus = 1
        v.gui = true
        v.enable_vmrun_ip_lookup = false
     end

     cfg.vm.provider "virtualbox" do |vb, override|
        vb.gui = false
        vb.name = "win10.windomain.local"
        vb.default_nic_type = "82545EM"
        vb.customize ["modifyvm", :id, "--memory", 2048]
        vb.customize ["modifyvm", :id, "--cpus", 2]
        vb.customize ["modifyvm", :id, "--vram", "32"]
        vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
     end
   end

   config.vm.define "kali" do |cfg|
    cfg.vm.box = "kalilinux/rolling"
    cfg.vm.hostname = "kali"
    cfg.vm.provision :shell, path: "kali_bootstrap.sh"
    cfg.vm.network :private_network, ip: "192.168.38.106", gateway: "192.168.38.1", dns: "8.8.8.8"

    cfg.vm.provider "vmware_desktop" do |v, override|
      v.vmx["displayname"] = "kali"
      v.memory = 4096
      v.cpus = 2
      v.gui = true
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.name = "kali"
      vb.customize ["modifyvm", :id, "--memory", 4096]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
    cfg.vm.provider "libvirt" do |lv, override|
      lv.graphics_type = "vnc"
      lv.video_type = "vga"
      lv.input :type => "tablet", :bus => "usb"
      lv.video_vram = 32768
      lv.memory = 4096
      lv.cpus = 2
      lv.storage_pool_name = 'default'
      override.vm.synced_folder './', '/vagrant', type: 'rsync' 
    end
  end
  
  config.vm.define "webserv" do |cfg|
    config.vm.box = "geerlingguy/centos8"
	
    cfg.vm.hostname = "webserv"
    #cfg.vm.provision :shell, path: "kali_bootstrap.sh"
    cfg.vm.network :private_network, ip: "192.168.38.107", gateway: "192.168.38.1", dns: "8.8.8.8"


     cfg.vm.provider "vmware_desktop" do |v, override|
        v.vmx["displayname"] = "exchange.windomain.local"
        v.memory = 2048
        v.cpus = 2
        v.gui = false
        v.enable_vmrun_ip_lookup = false
     end

     cfg.vm.provider "virtualbox" do |vb, override|
       vb.gui = false
       vb.name = "exchange.windomain.local"
       vb.default_nic_type = "82545EM"
       vb.customize ["modifyvm", :id, "--memory", 2048]
       vb.customize ["modifyvm", :id, "--cpus", 2]
       vb.customize ["modifyvm", :id, "--vram", "32"]
       vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
       vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
       vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
     end
   

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.name = "web"
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "ftp" do |cfg|
    cfg.vm.box = "centos/8"
    cfg.vm.hostname = "ftp"
    cfg.vm.provision :shell, path: "ftp_bootstrap.sh"
    cfg.vm.network :private_network, ip: "192.168.38.108", gateway: "192.168.38.1", dns: "8.8.8.8"

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "ftp"
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end
  
    config.vm.define "exchange" do |cfg|
      config.vm.box = "StefanScherer/windows_2019"
      cfg.vm.hostname = "exchange"
      cfg.vm.boot_timeout = 600
      cfg.vm.communicator = "winrm"
      cfg.winrm.basic_auth_only = true
      cfg.winrm.timeout = 300
      cfg.winrm.retry_limit = 20
      cfg.vm.network :private_network, ip: "192.168.38.109", gateway: "192.168.38.1", dns: "192.168.38.102"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", privileged: true, args: "-ip 192.168.38.109 -dns 8.8.8.8 -gateway 192.168.38.1" 
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
	
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: false
    cfg.vm.provision "shell", inline: 'wevtutil el | Select-String -notmatch "Microsoft-Windows-LiveId" | Foreach-Object {wevtutil cl "$_"}', privileged: false
    cfg.vm.provision "shell", path: "scripts/install-wefsubscriptions.ps1", privileged: false

    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: false

    cfg.vm.provision "shell", path: "scripts/install-choco-extras.ps1", privileged: false
    cfg.vm.provision "install-winlogbeat", type: "shell", path: "scripts/install-winlogbeat.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: false

    cfg.vm.provision "shell", path: "scripts/configure-pslogstranscriptsshare.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: false
	cfg.vm.provision "enable-public-winrm", type: "shell", path: "scripts/enable-winrm.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-microsoft-ata.ps1", privileged: false
    #cfg.vm.provision "enable-public-winrm", type: "shell", path: "scripts/enable-winrm.ps1", privileged: false


     cfg.vm.provider "vmware_desktop" do |v, override|
       v.vmx["displayname"] = "exchange.windomain.local"
       v.memory = 2048
       v.cpus = 2
       v.gui = false
       v.enable_vmrun_ip_lookup = false
     end

     cfg.vm.provider "virtualbox" do |vb, override|
       vb.gui = false
       vb.name = "exchange.windomain.local"
       vb.default_nic_type = "82545EM"
       vb.customize ["modifyvm", :id, "--memory", 8096]
       vb.customize ["modifyvm", :id, "--cpus", 2]
       vb.customize ["modifyvm", :id, "--vram", "32"]
       vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
       vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
       vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
     end
   end
end
